@startuml

package "Domain" {
  class Product {
    -Long productId
    -ProductName productName
  }
  
  class ProductName {
    -String name
  }
}

package "Application" {
  interface ProductUseCase {
    +void addProduct(Product product)
    +List<Product> getAllProducts()
    +Product getProductById(Long productId)
    +void updateProduct(Product product)
    +void deleteProduct(Long id)
    +Object findProductById(long l)
  }
  
  class ProductInputPort {
    -ProductOutputPort productOutputPort
  }
  
  interface ProductOutputPort {
    +void save(Product product)
    +List<Product> findAll()
    +Product findById(Long productId)
    +void delete(Product existingProduct)
  }
}

package "Infrastructure" {
  class JpaProductAdapter {
    -EntityManager entityManager
  }
  
  class InMemoryProductAdapter {
    -List<Product> products
    -AtomicLong idGenerator
  }
  
  class SwaggerConfig {
    +OpenAPI openAPI()
  }
  
  class DatabaseConfig {
  }
}

package "Framework" {
  class ProductAdapter {
    -ProductUseCase productUseCase
  }
  
  class DemoApplication {
  }
}

Product "1" *-- "1" ProductName

ProductUseCase <|.. ProductInputPort
ProductOutputPort <|.. JpaProductAdapter
ProductOutputPort <|.. InMemoryProductAdapter
ProductUseCase <-- ProductAdapter

ProductInputPort --> ProductOutputPort

@enduml